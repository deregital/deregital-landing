---
import { LOGO_IMAGE, SITE } from '@config';
import Hr from './Hr.astro';
import Logo from '@components/Logo.astro';
import ThemeToggle from '@components/ThemeToggle.astro';
import NavbarExtendida from '@components/NavbarExtendida.astro';

export interface Props {
  activeNav?: 'posts' | 'tags' | 'about' | 'search';
}

const { activeNav } = Astro.props;
---

<header class='fixed top-0 z-50 w-full bg-skin-fill'>
  <a
    class='absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4'
    href='#main-content'>Skip to content</a
  >
  <div
    class='mx-auto flex max-w-3xl flex-col items-center justify-between sm:flex-row'
  >
    <div class='relative flex w-full items-center justify-between px-4'>
      <nav
        class='relative flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0'
      >
        <div class='flex w-full items-center justify-between'>
          <a
            href='/'
            class='h-20 w-20 whitespace-nowrap pt-2 text-xl font-semibold sm:static sm:text-2xl'
          >
            {LOGO_IMAGE.enable ? <Logo /> : SITE.title}
          </a>
          <div class='flex w-full items-center justify-end gap-x-4'>
            <ThemeToggle />
            <!-- <button
              class='focus-outline hamburger-menu p-2 sm:hidden'
              aria-label='Open Menu'
              aria-expanded='false'
              aria-controls='menu-items'
            >
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='24'
                height='24'
                viewBox='0 0 24 24'
                fill='none'
                stroke='currentColor'
                stroke-width='1.5'
                stroke-linecap='round'
                stroke-linejoin='round'
                class='menu-icon h-6 w-6 scale-125 fill-skin-base'
              >
                <line x1='7' y1='12' x2='21' y2='12' class='line'></line>
                <line x1='3' y1='6' x2='21' y2='6' class='line'></line>
                <line x1='12' y1='18' x2='21' y2='18' class='line'></line>
                <line x1='18' y1='6' x2='6' y2='18' class='close'></line>
                <line x1='6' y1='6' x2='18' y2='18' class='close'></line>
              </svg>
            </button> -->
          </div>
        </div>
        <!-- <NavbarExtendida activeNav={activeNav} /> -->
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-3 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
    @apply col-span-1;
  }
  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector('.hamburger-menu');
    const menuIcon = document.querySelector('.menu-icon');
    const menuItems = document.querySelector('#menu-items');

    menuBtn?.addEventListener('click', () => {
      const menuExpanded = menuBtn.getAttribute('aria-expanded') === 'true';
      menuIcon?.classList.toggle('is-active');
      menuBtn.setAttribute('aria-expanded', menuExpanded ? 'false' : 'true');
      menuBtn.setAttribute(
        'aria-label',
        menuExpanded ? 'Open Menu' : 'Close Menu'
      );
      menuItems?.classList.toggle('display-none');
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener('astro:after-swap', toggleNav);
</script>
